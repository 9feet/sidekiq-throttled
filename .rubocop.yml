inherit_from: .rubocop.todo.yml

################################################################################

AllCops:
  DisplayCopNames: true
  TargetRubyVersion: 2.4

## Metrics #####################################################################

Metrics/BlockLength:
  Exclude:
    - "Guardfile"
    - "spec/**/*"

## Styles ######################################################################

Style/AlignHash:
  EnforcedHashRocketStyle: table

Style/AlignParameters:
  EnforcedStyle: with_fixed_indentation

Style/BracesAroundHashParameters:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/Encoding:
  EnforcedStyle: when_needed

Style/HashSyntax:
  EnforcedStyle: hash_rockets

Style/IndentArray:
  EnforcedStyle: consistent

Style/IndentHash:
  EnforcedStyle: consistent

# Follow your heart where it makes sense to use lambda or lambda literal.
# Enforcing it makes some pieces of code look REALLY terrible, e.g. in
# case of empty (noop) lambdas: `lambda { |_| }`.
Style/Lambda:
  Enabled: false

Style/MultilineMethodCallIndentation:
  EnforcedStyle: indented

# Enabling this cop makes Guardfile (which is full of pathname regexps)
# look absolutley style-inconsistent and terrible. In any case, this should
# be on developer's choice whenever to use `%r` or not. Just like we don't
# enforce to use `["foo"]` over `%w(foo)` and so on.
Style/RegexpLiteral:
  Enabled: false

Style/SpaceInLambdaLiteral:
  EnforcedStyle: require_space

Style/StringLiterals:
  EnforcedStyle: double_quotes
